on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          distribution: 'openjdk'
          java-version: '17'

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Set environment variables
        run: |
          echo "SECRET_KEY_SALT=${{ secrets.SECRET_KEY_SALT }}" >> $GITHUB_ENV
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> $GITHUB_ENV
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> $GITHUB_ENV
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> $GITHUB_ENV
          echo "RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }}" >> $GITHUB_ENV
          echo "RABBITMQ_DEFAULT_PASS=${{ secrets.RABBITMQ_DEFAULT_PASS }}" >> $GITHUB_ENV
          echo "RABBITMQ_DEFAULT_VHOST=${{ secrets.RABBITMQ_DEFAULT_VHOST }}" >> $GITHUB_ENV
          echo "MYSQL_DATA_BASE=${{ secrets.MYSQL_DATA_BASE }}" >> $GITHUB_ENV
          echo "MYSQL_ROOT_USER=${{ secrets.MYSQL_ROOT_USER }}" >> $GITHUB_ENV
          echo "RABBITMQ_DEFAULT_HOST=${{ secrets.RABBITMQ_DEFAULT_HOST }}" >> $GITHUB_ENV
          echo "RABBITMQ_DEFAULT_PORT=${{ secrets.RABBITMQ_DEFAULT_PORT }}" >> $GITHUB_ENV
          echo "secretKey=${{ secrets.secretKey }}" >> $GITHUB_ENV
          echo "TELEGRAM_USER_NAME=${{ secrets.TELEGRAM_USER_NAME }}" >> $GITHUB_ENV
          echo "TELEGRAM_API_KEY=${{ secrets.TELEGRAM_API_KEY }}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.SHA }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and test
        run: |
          ./gradlew test || exit 1
          docker-compose build

      - name: Push Docker image
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker-compose push
